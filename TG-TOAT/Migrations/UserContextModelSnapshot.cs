// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TGTOAT.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Addresses", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AddOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int?>("Zip")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            UserId = 1
                        },
                        new
                        {
                            UserId = 2
                        },
                        new
                        {
                            UserId = 3
                        },
                        new
                        {
                            UserId = 4
                        },
                        new
                        {
                            UserId = 5
                        },
                        new
                        {
                            UserId = 6
                        },
                        new
                        {
                            UserId = 7
                        },
                        new
                        {
                            UserId = 8
                        },
                        new
                        {
                            UserId = 9
                        },
                        new
                        {
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Data.Assignment", b =>
                {
                    b.Property<int>("AssignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignId"));

                    b.Property<string>("AssignDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxPoints")
                        .HasColumnType("int");

                    b.HasKey("AssignId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("Data.Cookies", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Cookies");
                });

            modelBuilder.Entity("Data.Courses", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Campus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseNum")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Room")
                        .HasColumnType("int");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("StopTime")
                        .HasColumnType("time");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Data.Departments", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"));

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeptId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DeptId = 1,
                            DeptName = "Computer Science"
                        },
                        new
                        {
                            DeptId = 2,
                            DeptName = "Mathematics"
                        },
                        new
                        {
                            DeptId = 3,
                            DeptName = "Physics"
                        },
                        new
                        {
                            DeptId = 4,
                            DeptName = "Biology"
                        },
                        new
                        {
                            DeptId = 5,
                            DeptName = "Chemistry"
                        });
                });

            modelBuilder.Entity("Data.InstructorConnection", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorCourseConnectId")
                        .HasColumnType("int");

                    b.HasKey("InstructorId");

                    b.ToTable("InstructorConnection");
                });

            modelBuilder.Entity("Data.Notifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Data.Quizzes", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxPoints")
                        .HasColumnType("int");

                    b.Property<string>("NumQuestions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Questions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuizDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuizName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuizId");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("Data.StudentAssignments", b =>
                {
                    b.Property<int>("AssignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignId"));

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Submission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Submitted")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignId");

                    b.ToTable("StudentAssignment");
                });

            modelBuilder.Entity("Data.StudentConnection", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Grade")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentConnection");
                });

            modelBuilder.Entity("Data.StudentQuizzes", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Submission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Submitted")
                        .HasColumnType("datetime2");

                    b.HasKey("QuizId");

                    b.ToTable("StudentQuizzes");
                });

            modelBuilder.Entity("Data.Tuition", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<decimal>("AmountDue")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("UserId");

                    b.ToTable("Tuition");
                });

            modelBuilder.Entity("Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "ivan@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        },
                        new
                        {
                            UserId = 2,
                            Email = "spencer@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        },
                        new
                        {
                            UserId = 3,
                            Email = "logan@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        },
                        new
                        {
                            UserId = 4,
                            Email = "josh@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        },
                        new
                        {
                            UserId = 5,
                            Email = "scott@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        },
                        new
                        {
                            UserId = 6,
                            Email = "bob@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        },
                        new
                        {
                            UserId = 7,
                            Email = "awstin@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        },
                        new
                        {
                            UserId = 8,
                            Email = "alanna@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        },
                        new
                        {
                            UserId = 9,
                            Email = "brooks@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        },
                        new
                        {
                            UserId = 10,
                            Email = "drew@gmail.com ",
                            Password = "99nrQ1U7DPLNkL3SxFNCkA==;W/4hz7jhEXDk6PGC2l3c+iidJiY1uUTSvTU9xytI8qw="
                        });
                });

            modelBuilder.Entity("Data.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PFP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Ivan",
                            LastName = "Garcia",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Instructor"
                        },
                        new
                        {
                            UserId = 2,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Spencer",
                            LastName = "Hobert",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Instructor"
                        },
                        new
                        {
                            UserId = 3,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Logan",
                            LastName = "McKay",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Instructor"
                        },
                        new
                        {
                            UserId = 4,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Josh",
                            LastName = "Morgan",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Instructor"
                        },
                        new
                        {
                            UserId = 5,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Scott",
                            LastName = "Van Horn",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Instructor"
                        },
                        new
                        {
                            UserId = 6,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Bob",
                            LastName = "Johnson",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Student"
                        },
                        new
                        {
                            UserId = 7,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Awstin",
                            LastName = "Prashat",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Student"
                        },
                        new
                        {
                            UserId = 8,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Alanna",
                            LastName = "Hardin",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Student"
                        },
                        new
                        {
                            UserId = 9,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Brooks",
                            LastName = "Gray",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Student"
                        },
                        new
                        {
                            UserId = 10,
                            BirthDate = new DateOnly(2000, 1, 1),
                            FirstName = "Drew",
                            LastName = "Barnes",
                            PFP = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAABTxJREFUeF7tnQtO4zAQhmtozwGcZOEkC2qQuMXCLZBIRfcklJPQPQePbKYbr7JdYo8T+/e4TCVERRzbmS/z8Gsws4I+Nzc3p29vb9+py03TnBpjTnu/t/R3Y8y2aZrd96Ojo+eHh4d1QY84M9I724NwPpvN6CfoQ3AIkjHm5/Hx8eb+/n4HS+pHLJAeiNtYwus0Z7NYLO6kghEHJAWIfaCd1qzrur6LBTtWPaKAVFVFJukp1sP56pEIRgyQqqp+tAKMZp58MPau30rRFhFAqqoirQh22IFC9xUXASU7ECEwdrDIhK1WqzMfuZTXswKRBMMKuR3XrFer1VVKobvqzgYks8/wyTub+coCBB1N+aT/2XVjzFWOUX4uIM0YISHvyeVP4ECEm6p/mOfwJzmAiNeOnoPfLhaLC+Q0CxTIcrl8bCf6LpGmZ2pbaC2BAmnNVTHa0dcScvB1XW+mwuXcDwNyfX192TTNI6dTAsvAwmAYEImDwADwm7quLwLKjy6KBFKcueqbLdSUCgRI4ebKcrlA+BEIkBKjq09sDsSPKBC+tYf4EQiQwh26RXY4QJbL5Qtt2eG/jPJKoua2UBpSbISFjrQUSIAytuvuyeWVvAF6XjVZfOoQIOrUhQE5hHEIatYXpSE591zxX09HyUMDAt2RGIXAXiWoNXaIhnT7dV9SCApVJyLComeBAKGGSnbsKHMFBVLyjC/KXEGBlGy25vP5GWqjA8xkdQNE3eTgcXpQICVqCVI7oCbLvhglbZRr+wxZlOorDVRDqOGStAQV6mYFQo0XEnFB1tD3XQpcQwoxXXBTZeWSDUg3WJQ4xwVZqh0KtrIC6fwJ7WbMfb4Qum7uinyzAuk5eUqXkesErhgYWcLeobcjcziczWeIceqfgUEfdesSB8B2tnNmprObrP1OIlJrdG2K0Yrs4xDOm5IQjEgQIsJeLpj39/fzpmnI8Y+KxiTmNBEZ9nKA9MuQ1hCcj4+Pb7uIxJHAjHJkURkpOUy4zyrOh3A7fqjlFIgwsgpEgQiTgLDuqIYoEGESENYdqIbQ1EgXqp6QHGzO3T2Z0AH959QHLPfSz/7tQj/nb9fHbeq+wEbq9qE7wQel1LCDuZhwev25DDnRZdPLIhIzJ9GQ2OscFk67Ye0XfZ/P51vfPqmuDzb79Ul7XxCEIUtmEzO349K7FJoTFUhsED7zboVjzUz31o+aXvG1NXCdzGtUMFGAJJwIHCkn7G209zdWtuzJQEra1pMSE2lpjNxak4CgF5RSCjRG3TFmlUcDybzkGkN+KesYveYyCojCYLEcBSUYiJopFgxbKBhKEBCFEQRjl7o8ND0gG4hGU2EwbOnQ6IsN5BDOmo8T6fS7Qs4osoCoqZoOpZ2TY+2m5wKR8P89okglYyWsTdxeIKodURF6tYQDRLUjHhOvlnCAFJ98LJ48p9XEyUrnBFLI0bNpUsLf7TRbTiAa6iah5TRbTiAlJs9PIsKIlfrM1iAQja4iUvi/qkGzNQhE/Uc6IK5kNgokndxdNQ/OAg8CUYeelJQCSSre8MoHIy2XU9cReriguXcoEK6kQOUUCEjQ3GYUCFdSoHIKBCRobjMKhCspUDkFAhI0txkFwpUUqJwCAQma1YxrF4prYCgx2xvrgaUXGguk+P9oIBXMqNle3amYDqcrObNvxVDnsyJzGb1iSP1QLYlM40914zc50N16FiQqFO/xBO++rK9+oDMiDi8MassLxHaIwLy+vj6FHLiP+DDFVhV6RoQNxPoUm9Etw5nwIqD0zsyvqcOhGe1+Az3XJZI28ZenAAAAAElFTkSuQmCC",
                            Role = "Student"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
