@model TGTOAT.Models.User

<h2>@ViewData["Title"]</h2>

<!-- User account details -->
<form asp-action="UpdateUser" method="post">
    <h4>User Details</h4>
    <hr />
    <input type="hidden" asp-for="Id" /> <!-- Include User Id for updating -->

    <input type="text" asp-for="FirstName" readonly id="firstName">
    <input type="text" asp-for="LastName" readonly id="lastName">

    <input type="text" asp-for="Address.AddressLineOne" readonly id="addressLineOne">
    <input type="text" asp-for="Address.AddressLineTwo" readonly id="addressLineTwo">
    <input type="text" asp-for="Address.ZipCode" readonly id="zip">

    <button type="button" id="editButton" onclick="toggleEdit()">Edit</button>
    <button type="submit" style="display: none;" id="submitButton">Save</button> <!-- Hidden submit button -->
    <!-- Toast notification -->
    <div id="toast" class="toast" style="display:none;">
        <p>Saved!</p>
    </div>
</form>

<script>
    function toggleEdit() {
        // Retrieve form inputs
        let inputs = document.querySelectorAll('input[type="text"]');
        let button = document.getElementById('editButton');
        let submitButton = document.getElementById('submitButton');

        if (button.innerText === 'Edit') {
            // Enable editing
            inputs.forEach(input => input.removeAttribute('readonly'));
            button.innerText = 'Save';
            submitButton.style.display = 'block'; // Show the submit button
        } else {
            // Submission confirmation logic
            let confirmSave = confirm("Are you sure you want to save the changes?");
            if (confirmSave) {
                // Disable editing
                inputs.forEach(input => input.setAttribute('readonly', 'readonly'));
                showToast();
                button.innerText = 'Edit';
                submitButton.style.display = 'none'; // Hide the submit button

                // Submit the form
                document.querySelector('form').submit();
            }
        }
    }

    // Success toast notification
    function showToast() {
        let toast = document.getElementById('toast');
        toast.style.display = 'block';
        setTimeout(() => {
            toast.style.display = 'none';
        }, 1000);
    }
</script>

<!-- CSS for success toast -->
<style>
    .toast {
        position: fixed;
        bottom: 10px;
        right: 10px;
        background-color: #4CAF50;
        color: white;
        padding: 10px;
        border-radius: 5px;
        opacity: 0.9;
        font-family: Arial, sans-serif;
        z-index: 1000;
    }
</style>
