@model Models.UserIndexViewModel

@section Scripts {
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.css' rel='stylesheet' />
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.js'></script>
}

@{
    ViewData["Title"] = "Calendar";

    if (Model.UserRole == "Student")
    {
        Layout = "~/Views/Shared/_StudentLayout.cshtml";
    }
    else if (Model.UserRole == "Instructor")
    {
        Layout = "~/Views/Shared/_InstructorLayout.cshtml";
    }
}

<!-- Calendar Container -->
<div id="calendar"></div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        // Initialize FullCalendar
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',  // Month view by default
            headerToolbar: {
                left: 'prev,next today',   // Previous/Next buttons
                center: 'title',           // Calendar title
                right: 'dayGridMonth,timeGridWeek,timeGridDay'  // Month, Week, Day views
            },
            slotMinTime: '07:00:00',  // Start calendar at 7 AM
            slotMaxTime: '22:00:00',  // End calendar at 10 PM
            views: {
                dayGridMonth: {  // Month view
                    buttonText: 'Month'
                },
                timeGridWeek: {  // Week view
                    buttonText: 'Week'
                },
                timeGridDay: {   // Day view
                    buttonText: 'Day'
                }
            },
            
            events: function (fetchInfo, successCallback, failureCallback) {
                // AJAX call to get course events
                $.ajax({
                    url: '/Course/GetCoursesForCalendar',  // Controller method to fetch events
                    type: 'GET',
                    success: function (data) {
                        // Transform the events to include proper time formatting
                        const transformedEvents = data.map(event => {
                            if (event.startTime) { // If it's a course event
                                return {
                                    ...event,
                                    allDay: false,
                                    display: 'block',
                                    startRecur: event.startRecur,
                                    endRecur: event.endRecur,
                                    daysOfWeek: event.daysOfWeek,
                                    startTime: event.startTime,
                                    endTime: event.endTime
                                };
                            } else { // If it's an assignment/quiz event
                                const isQuiz = event.title.toLowerCase().includes('quiz');
                                return {
                                    ...event,
                                    display: 'list-item',
                                    backgroundColor: isQuiz ? '#ff4444' : '#3788d8', // Red for quizzes, blue for assignments
                                    borderColor: isQuiz ? '#ff4444' : '#3788d8',
                                    textColor: '#FFFFFF',
                                    allDay: true
                                };
                            }
                        });
                        successCallback(transformedEvents);
                    },
                    error: function () {
                        failureCallback();
                    }
                });
            },
            eventTimeFormat: {
                hour: 'numeric',
                minute: '2-digit',
                meridiem: true,
                omitZeroMinute: true,
                hour12: true,
                displayEventTime: false
            },
            displayEventTime: false,
            eventClick: function (info) {
                // Navigate to assignment or course when clicked
                if (info.event.url) {
                    window.open(info.event.url, "_self");  // Open assignment or course link in the same window
                    info.jsEvent.preventDefault();  // Prevent default behavior
                }
            }
        });
        // Render the calendar
        calendar.render();
    });
</script>