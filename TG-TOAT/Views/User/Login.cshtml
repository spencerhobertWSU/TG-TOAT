@model LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<div class="login-card">
    <h1 class="text-center">Login</h1>

    <div class="login-div row justify-content-center">
        <div class="col-md-6">

            <form asp-action="Login">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group login-group form-floating">
                    <i class="fa-solid fa-user"></i>
                    <input asp-for="Email" class="login-input form-control" id="floatingInput" placeholder="Email Address" />
                    <label id="loginEmail" for="floatingInput">Email address</label>
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group login-group form-floating">
                    <i class="fa-duotone fa-solid fa-lock"></i>
                    <input asp-for="Password" class="login-input form-control" id="floatingPass" placeholder="Password" />
                    <label id="loginPass" for="loginPass">Password</label>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                    </label>
                </div>
                <div class="form-group">
                    <input type="submit" value="Log In" class="btn btn-primary login-btn" />
                </div>
            </form>
            <br />
            <a asp-action="Create" class="extra-links">Create Account</a>
        </div>

    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}